<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Applyforeignkeyconstraints extends Doctrine_Migration
{
	public function up()
	{
		$this->createForeignKey('disambiguation_entity', array(
             'local' => 'disambiguation_id',
             'foreign' => 'id',
             'foreignTable' => 'disambiguation',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'disambiguation_entity_disambiguation_id',
             ));		$this->createForeignKey('disambiguation_entity', array(
             'local' => 'entity_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'disambiguation_entity_entity_id',
             ));		$this->createForeignKey('entity', array(
             'local' => 'superceded_by_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'entity_superceded_by_id',
             ));		$this->createForeignKey('entity', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'entity_created_by',
             ));		$this->createForeignKey('entity', array(
             'local' => 'authority_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'entity_authority_id',
             ));		$this->createForeignKey('entity', array(
             'local' => 'entity_type_id',
             'foreign' => 'id',
             'foreignTable' => 'entity_type',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'entity_entity_type_id',
             ));		$this->createForeignKey('entity_alias', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'entity_alias_created_by',
             ));		$this->createForeignKey('entity_alias', array(
             'local' => 'entity_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'entity_alias_entity_id',
             ));		$this->createForeignKey('entity_creation_queue', array(
             'local' => 'entity_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'entity_creation_queue_entity_id',
             ));		$this->createForeignKey('entity_url', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'entity_url_created_by',
             ));		$this->createForeignKey('entity_url', array(
             'local' => 'entity_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'entity_url_entity_id',
             ));		$this->createForeignKey('entity_url_verified', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'entity_url_verified_created_by',
             ));		$this->createForeignKey('entity_url_verified', array(
             'local' => 'entity_url_id',
             'foreign' => 'id',
             'foreignTable' => 'entity_url',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'entity_url_verified_entity_url_id',
             ));		$this->createForeignKey('fact', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'fact_created_by',
             ));		$this->createForeignKey('fact', array(
             'local' => 'entity_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_entity_id',
             ));		$this->createForeignKey('fact', array(
             'local' => 'related_entity_id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'fact_related_entity_id',
             ));		$this->createForeignKey('fact', array(
             'local' => 'fact_type_id',
             'foreign' => 'id',
             'foreignTable' => 'fact_type',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_fact_type_id',
             ));		$this->createForeignKey('fact_comment', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_comment_created_by',
             ));		$this->createForeignKey('fact_comment', array(
             'local' => 'fact_id',
             'foreign' => 'id',
             'foreignTable' => 'fact',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_comment_fact_id',
             ));		$this->createForeignKey('fact_source', array(
             'local' => 'source_type_id',
             'foreign' => 'id',
             'foreignTable' => 'source_type',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_source_source_type_id',
             ));		$this->createForeignKey('fact_source', array(
             'local' => 'fact_id',
             'foreign' => 'id',
             'foreignTable' => 'fact',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_source_fact_id',
             ));		$this->createForeignKey('fact_source', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'set null',
             'name' => 'fact_source_created_by',
             ));		$this->createForeignKey('fact_source_verified', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_source_verified_created_by',
             ));		$this->createForeignKey('fact_source_verified', array(
             'local' => 'fact_source_id',
             'foreign' => 'id',
             'foreignTable' => 'fact_source',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'fact_source_verified_fact_source_id',
             ));		$this->createForeignKey('story', array(
             'local' => 'story_type_id',
             'foreign' => 'id',
             'foreignTable' => 'story_type',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_story_type_id',
             ));		$this->createForeignKey('story', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_created_by',
             ));		$this->createForeignKey('story_comment', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_comment_created_by',
             ));		$this->createForeignKey('story_comment', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'foreignTable' => 'story',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_comment_story_id',
             ));		$this->createForeignKey('story_fact', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'foreignTable' => 'story',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_fact_story_id',
             ));		$this->createForeignKey('story_fact', array(
             'local' => 'fact_id',
             'foreign' => 'id',
             'foreignTable' => 'fact',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_fact_fact_id',
             ));		$this->createForeignKey('story_relation', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'foreignTable' => 'story',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_relation_story_id',
             ));		$this->createForeignKey('story_relation', array(
             'local' => 'related_story_id',
             'foreign' => 'id',
             'foreignTable' => 'story',
             'onUpdate' => NULL,
             'onDelete' => 'cascade',
             'name' => 'story_relation_related_story_id',
             ));		$this->createForeignKey('sf_guard_group_permission', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_group',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             'name' => 'sf_guard_group_permission_group_id',
             ));		$this->createForeignKey('sf_guard_group_permission', array(
             'local' => 'permission_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_permission',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             'name' => 'sf_guard_group_permission_permission_id',
             ));		$this->createForeignKey('sf_guard_remember_key', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             'name' => 'sf_guard_remember_key_user_id',
             ));		$this->createForeignKey('sf_guard_user_group', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             'name' => 'sf_guard_user_group_user_id',
             ));		$this->createForeignKey('sf_guard_user_group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_group',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             'name' => 'sf_guard_user_group_group_id',
             ));		$this->createForeignKey('sf_guard_user_permission', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             'name' => 'sf_guard_user_permission_user_id',
             ));		$this->createForeignKey('sf_guard_user_permission', array(
             'local' => 'permission_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_permission',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             'name' => 'sf_guard_user_permission_permission_id',
             ));		$this->createForeignKey('entity_version', array(
             'local' => 'id',
             'foreign' => 'id',
             'foreignTable' => 'entity',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             'name' => 'entity_version_id',
             ));		$this->createForeignKey('story_version', array(
             'local' => 'id',
             'foreign' => 'id',
             'foreignTable' => 'story',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             'name' => 'story_version_id',
             ));
	}

	public function down()
	{
		$this->dropForeignKey('disambiguation_entity', 'disambiguation_entity_disambiguation_id');
		$this->dropForeignKey('disambiguation_entity', 'disambiguation_entity_entity_id');
		$this->dropForeignKey('entity', 'entity_superceded_by_id');
		$this->dropForeignKey('entity', 'entity_created_by');
		$this->dropForeignKey('entity', 'entity_authority_id');
		$this->dropForeignKey('entity', 'entity_entity_type_id');
		$this->dropForeignKey('entity_alias', 'entity_alias_created_by');
		$this->dropForeignKey('entity_alias', 'entity_alias_entity_id');
		$this->dropForeignKey('entity_creation_queue', 'entity_creation_queue_entity_id');
		$this->dropForeignKey('entity_url', 'entity_url_created_by');
		$this->dropForeignKey('entity_url', 'entity_url_entity_id');
		$this->dropForeignKey('entity_url_verified', 'entity_url_verified_created_by');
		$this->dropForeignKey('entity_url_verified', 'entity_url_verified_entity_url_id');
		$this->dropForeignKey('fact', 'fact_created_by');
		$this->dropForeignKey('fact', 'fact_entity_id');
		$this->dropForeignKey('fact', 'fact_related_entity_id');
		$this->dropForeignKey('fact', 'fact_fact_type_id');
		$this->dropForeignKey('fact_comment', 'fact_comment_created_by');
		$this->dropForeignKey('fact_comment', 'fact_comment_fact_id');
		$this->dropForeignKey('fact_source', 'fact_source_source_type_id');
		$this->dropForeignKey('fact_source', 'fact_source_fact_id');
		$this->dropForeignKey('fact_source', 'fact_source_created_by');
		$this->dropForeignKey('fact_source_verified', 'fact_source_verified_created_by');
		$this->dropForeignKey('fact_source_verified', 'fact_source_verified_fact_source_id');
		$this->dropForeignKey('story', 'story_story_type_id');
		$this->dropForeignKey('story', 'story_created_by');
		$this->dropForeignKey('story_comment', 'story_comment_created_by');
		$this->dropForeignKey('story_comment', 'story_comment_story_id');
		$this->dropForeignKey('story_fact', 'story_fact_story_id');
		$this->dropForeignKey('story_fact', 'story_fact_fact_id');
		$this->dropForeignKey('story_relation', 'story_relation_story_id');
		$this->dropForeignKey('story_relation', 'story_relation_related_story_id');
		$this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_group_id');
		$this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_permission_id');
		$this->dropForeignKey('sf_guard_remember_key', 'sf_guard_remember_key_user_id');
		$this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_user_id');
		$this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_group_id');
		$this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_user_id');
		$this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_permission_id');
		$this->dropForeignKey('entity_version', 'entity_version_id');
		$this->dropForeignKey('story_version', 'story_version_id');

	}
}