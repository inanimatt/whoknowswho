<?php

/**
 * BaseStoryFact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $story_id
 * @property integer $fact_id
 * @property enum $primary_entity
 * @property integer $story_order
 * @property string $description
 * @property Story $Story
 * @property Fact $Fact
 * 
 * @method integer   getStoryId()        Returns the current record's "story_id" value
 * @method integer   getFactId()         Returns the current record's "fact_id" value
 * @method enum      getPrimaryEntity()  Returns the current record's "primary_entity" value
 * @method integer   getStoryOrder()     Returns the current record's "story_order" value
 * @method string    getDescription()    Returns the current record's "description" value
 * @method Story     getStory()          Returns the current record's "Story" value
 * @method Fact      getFact()           Returns the current record's "Fact" value
 * @method StoryFact setStoryId()        Sets the current record's "story_id" value
 * @method StoryFact setFactId()         Sets the current record's "fact_id" value
 * @method StoryFact setPrimaryEntity()  Sets the current record's "primary_entity" value
 * @method StoryFact setStoryOrder()     Sets the current record's "story_order" value
 * @method StoryFact setDescription()    Sets the current record's "description" value
 * @method StoryFact setStory()          Sets the current record's "Story" value
 * @method StoryFact setFact()           Sets the current record's "Fact" value
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6716 2009-11-12 19:26:28Z jwage $
 */
abstract class BaseStoryFact extends FoafRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('story_fact');
        $this->hasColumn('story_id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('fact_id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('primary_entity', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'entity',
              1 => 'related',
             ),
             ));
        $this->hasColumn('story_order', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Story', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('Fact', array(
             'local' => 'fact_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}